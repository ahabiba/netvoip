# Generated by Django 2.0.4 on 2018-11-19 13:40

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import pay.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cdrs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cgrid', models.CharField(max_length=40)),
                ('run_id', models.CharField(max_length=64)),
                ('origin_host', models.CharField(max_length=64)),
                ('source', models.CharField(max_length=64)),
                ('origin_id', models.CharField(max_length=64)),
                ('tor', models.CharField(max_length=16)),
                ('request_type', models.CharField(max_length=24)),
                ('tenant', models.CharField(max_length=64)),
                ('category', models.CharField(max_length=32)),
                ('account', models.CharField(max_length=128)),
                ('subject', models.CharField(max_length=128)),
                ('destination', models.CharField(max_length=128)),
                ('setup_time', models.DateTimeField()),
                ('answer_time', models.DateTimeField()),
                ('usage', models.IntegerField()),
                ('extra_fields', models.TextField()),
                ('cost_source', models.CharField(max_length=64)),
                ('cost', models.DecimalField(decimal_places=4, max_digits=20)),
                ('cost_details', models.TextField(blank=True, null=True)),
                ('extra_info', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cdrs',
                'managed': False,
                'verbose_name': 'cdr',
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Filters',
            fields=[
                ('p_k', models.AutoField(primary_key=True, serialize=False)),
                ('tpid', models.CharField(default='CgratesPay', max_length=64)),
                ('tenant', models.CharField(max_length=64)),
                ('id', models.CharField(max_length=64)),
                ('filter_type', models.CharField(choices=[('*string', '*string'), ('*prefix', '*prefix'), ('*timings', '*timings'), ('*destinations', '*destinations'), ('*rsr', '*rsr'), ('*lt', '*lt')], max_length=16)),
                ('filter_field_name', models.CharField(max_length=64)),
                ('filter_field_values', models.CharField(max_length=256)),
                ('activation_interval', models.CharField(blank=True, default='0000-01-01T00:00:00Z', max_length=64)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_filters',
                'managed': False,
                'verbose_name': 'Filter',
            },
        ),
        migrations.CreateModel(
            name='SmCosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cgrid', models.CharField(max_length=40)),
                ('run_id', models.CharField(max_length=64)),
                ('origin_host', models.CharField(max_length=64)),
                ('origin_id', models.CharField(max_length=64)),
                ('cost_source', models.CharField(max_length=64)),
                ('usage', models.DecimalField(decimal_places=9, max_digits=30)),
                ('cost_details', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sm_costs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TpAccountActions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tpid', models.CharField(default='CgratesPay', max_length=64)),
                ('loadid', models.CharField(default='CSVLOAD', max_length=64)),
                ('tenant', models.CharField(max_length=64)),
                ('account', models.CharField(max_length=64)),
                ('action_plan_tag', models.CharField(blank=True, max_length=64, null=True)),
                ('action_triggers_tag', models.CharField(blank=True, max_length=64, null=True)),
                ('allow_negative', models.IntegerField(choices=[(1, 'true'), (0, 'false')])),
                ('disabled', models.IntegerField(choices=[(1, 'true'), (0, 'false')])),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_account_actions',
                'managed': False,
                'verbose_name': 'Account Action',
            },
        ),
        migrations.CreateModel(
            name='TpActionPlans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tpid', models.CharField(default='CgratesPay', max_length=64)),
                ('tag', models.CharField(max_length=64)),
                ('actions_tag', models.CharField(max_length=64)),
                ('timing_tag', models.CharField(default='*asap', max_length=64)),
                ('weight', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_action_plans',
                'managed': False,
                'verbose_name': 'Action Plan',
            },
        ),
        migrations.CreateModel(
            name='TpActions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tpid', models.CharField(default='CgratesPay', max_length=64)),
                ('tag', models.CharField(blank=True, max_length=64, null=True)),
                ('action', models.CharField(blank=True, choices=[('*allow_negative', '*allow_negative'), ('*call_url', '*call_url'), ('*call_url_async', '*call_url_async'), ('*cdrlog', '*cdrlog'), ('*debit', '*debit'), ('*deny_negative', '*deny_negative'), ('*disable_account', '*disable_account'), ('*enable_account', '*enable_account'), ('*log', '*log'), ('*mail_async', '*mail_async'), ('*reset_account', '*reset_account'), ('*reset_counter', '*reset_counter'), ('*reset_counters', '*reset_counters'), ('*reset_triggers', '*reset_triggers'), ('*set_recurrent', '*set_recurrent'), ('*topup', '*topup'), ('*topup_reset', '*topup_reset'), ('*unset_recurrent', '*unset_recurrent'), ('*unlimited', '*unlimited')], max_length=24, null=True)),
                ('balance_tag', models.CharField(blank=True, max_length=64, null=True)),
                ('balance_type', models.CharField(blank=True, choices=[('*voice', '*voice'), ('*sms', '*sms'), ('*data', '*data'), ('*monetary', '*monetary')], max_length=24, null=True)),
                ('directions', models.CharField(blank=True, choices=[('*in', '*in'), ('*out', '*out')], max_length=8, null=True)),
                ('units', models.CharField(blank=True, default=0, max_length=256, null=True)),
                ('expiry_time', models.CharField(blank=True, default='*unlimited', max_length=24, null=True)),
                ('timing_tags', models.CharField(blank=True, max_length=128, null=True)),
                ('destination_tags', models.CharField(blank=True, default='*any', max_length=64, null=True)),
                ('rating_subject', models.CharField(blank=True, max_length=64, null=True)),
                ('categories', models.CharField(blank=True, max_length=32, null=True)),
                ('shared_groups', models.CharField(blank=True, max_length=64, null=True)),
                ('balance_weight', models.CharField(blank=True, default=0.0, max_length=10, null=True)),
                ('balance_blocker', models.CharField(blank=True, choices=[('true', 'true'), ('false', 'false')], default='false', max_length=5, null=True)),
                ('balance_disabled', models.CharField(blank=True, choices=[('true', 'true'), ('false', 'false')], default='false', max_length=24, null=True)),
                ('extra_parameters', models.CharField(blank=True, max_length=256, null=True)),
                ('filter', models.CharField(blank=True, max_length=256, null=True)),
                ('weight', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_actions',
                'managed': False,
                'verbose_name': 'Action',
            },
        ),
        migrations.CreateModel(
            name='TpActionTriggers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tpid', models.CharField(default='CgratesPay', max_length=64)),
                ('tag', models.CharField(max_length=64)),
                ('unique_id', models.CharField(max_length=64)),
                ('threshold_type', models.CharField(choices=[('*min_counter', '*min_counter'), ('*max_counter', '*max_counter'), ('*min_balance', '*min_balance'), ('*max_balance', '*max_balance'), ('*min_asr', '*min_asr'), ('*max_asr', '*max_asr'), ('*min_acd', '*min_acd'), ('*max_acd', '*max_acd'), ('*min_acc', '*min_acc'), ('*max_acc', '*max_acc'), ('*min_tcc', '*min_tcc'), ('*max_tcc', '*max_tcc'), ('*min_tcd', '*min_tcd'), ('*max_tcd', '*max_tcd'), ('*min_pdd', '*min_pdd'), ('*max_pdd', '*max_pdd')], max_length=64)),
                ('threshold_value', models.DecimalField(blank=True, decimal_places=4, default=0, max_digits=20, null=True)),
                ('recurrent', models.IntegerField(choices=[(1, 'True'), (0, 'False')], default=0)),
                ('min_sleep', models.CharField(blank=True, default='0', max_length=16, null=True)),
                ('expiry_time', models.CharField(blank=True, default='0001-01-01T00:00:00Z', max_length=24, null=True)),
                ('activation_time', models.CharField(blank=True, default='0001-01-01T00:00:00Z', max_length=24, null=True)),
                ('balance_tag', models.CharField(choices=[('MONETARY', 'MONETARY'), ('SMS', 'SMS'), ('INTERNET', 'INTERNET'), ('INTERNET_TIME', 'INTERNET_TIME'), ('MINUTES', 'MINUTES')], max_length=64)),
                ('balance_type', models.CharField(choices=[('*voice', '*voice'), ('*sms', '*sms'), ('*data', '*data'), ('*monetary', '*monetary')], max_length=24)),
                ('balance_directions', models.CharField(choices=[('*in', '*in'), ('*out', '*out')], max_length=8)),
                ('balance_categories', models.CharField(blank=True, max_length=32, null=True)),
                ('balance_destination_tags', models.CharField(blank=True, max_length=64, null=True)),
                ('balance_rating_subject', models.CharField(blank=True, max_length=64, null=True)),
                ('balance_shared_groups', models.CharField(blank=True, max_length=64, null=True)),
                ('balance_expiry_time', models.CharField(blank=True, default='0001-01-01T00:00:00Z', max_length=24, null=True)),
                ('balance_timing_tags', models.CharField(blank=True, max_length=128, null=True)),
                ('balance_weight', models.CharField(blank=True, default=0, max_length=10, null=True)),
                ('balance_blocker', models.CharField(blank=True, choices=[('1', 'True'), ('0', 'False')], default=0, max_length=5, null=True)),
                ('balance_disabled', models.CharField(blank=True, choices=[('1', 'True'), ('0', 'False')], default=0, max_length=5, null=True)),
                ('min_queued_items', models.IntegerField(blank=True, default=0, null=True)),
                ('actions_tag', models.CharField(max_length=64)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_action_triggers',
                'managed': False,
                'verbose_name': 'Action Trigger',
            },
        ),
        migrations.CreateModel(
            name='TpAliases',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tpid', models.CharField(max_length=64)),
                ('direction', models.CharField(choices=[('*in', '*in'), ('*out', '*out')], max_length=8)),
                ('tenant', models.CharField(max_length=64)),
                ('category', models.CharField(max_length=64)),
                ('account', models.CharField(max_length=64)),
                ('subject', models.CharField(max_length=64)),
                ('destination_id', models.CharField(max_length=64)),
                ('context', models.CharField(max_length=64)),
                ('target', models.CharField(max_length=64)),
                ('original', models.CharField(max_length=64)),
                ('alias', models.CharField(max_length=64)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_aliases',
                'managed': False,
                'verbose_name': 'Aliase',
            },
        ),
        migrations.CreateModel(
            name='TpAttributes',
            fields=[
                ('p_k', models.AutoField(primary_key=True, serialize=False)),
                ('tpid', models.CharField(default='CgratesPay', max_length=64)),
                ('tenant', models.CharField(max_length=64)),
                ('id', models.CharField(max_length=64)),
                ('contexts', models.CharField(max_length=64)),
                ('filter_ids', models.CharField(max_length=64)),
                ('activation_interval', models.CharField(blank=True, default='0000-01-01T00:00:00Z', max_length=64)),
                ('field_name', models.CharField(max_length=64)),
                ('initial', models.CharField(max_length=64)),
                ('substitute', models.CharField(max_length=64)),
                ('append', models.IntegerField(choices=[(1, 'True'), (0, 'False')])),
                ('blocker', models.IntegerField(choices=[(1, 'True'), (0, 'False')])),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_attributes',
                'managed': False,
                'verbose_name': 'Attribute',
            },
        ),
        migrations.CreateModel(
            name='TpCdrStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tpid', models.CharField(max_length=64)),
                ('tag', models.CharField(max_length=64)),
                ('queue_length', models.IntegerField()),
                ('time_window', models.CharField(max_length=8)),
                ('save_interval', models.CharField(max_length=8)),
                ('metrics', models.CharField(choices=[('ACC', 'ACC'), ('ACD', 'ACD'), ('ASR', 'ASR'), ('PDD', 'PDD'), ('TCC', 'TCC'), ('TCD', 'TCD')], max_length=64)),
                ('setup_interval', models.CharField(blank=True, max_length=64, null=True)),
                ('tors', models.CharField(blank=True, max_length=64, null=True)),
                ('cdr_hosts', models.CharField(blank=True, max_length=64, null=True)),
                ('cdr_sources', models.CharField(blank=True, max_length=64, null=True)),
                ('req_types', models.CharField(blank=True, max_length=64, null=True)),
                ('directions', models.CharField(blank=True, max_length=8, null=True)),
                ('tenants', models.CharField(blank=True, max_length=64, null=True)),
                ('categories', models.CharField(blank=True, max_length=32, null=True)),
                ('accounts', models.CharField(blank=True, max_length=255, null=True)),
                ('subjects', models.CharField(blank=True, max_length=64, null=True)),
                ('destination_ids', models.CharField(blank=True, max_length=64, null=True)),
                ('pdd_interval', models.CharField(blank=True, max_length=64, null=True)),
                ('usage_interval', models.CharField(blank=True, max_length=64, null=True)),
                ('suppliers', models.CharField(blank=True, max_length=64, null=True)),
                ('disconnect_causes', models.CharField(blank=True, max_length=64, null=True)),
                ('mediation_runids', models.CharField(default='*default', max_length=64)),
                ('rated_accounts', models.CharField(blank=True, max_length=255, null=True)),
                ('rated_subjects', models.CharField(blank=True, max_length=64, null=True)),
                ('cost_interval', models.CharField(blank=True, default=0.0, max_length=24, null=True)),
                ('action_triggers', models.CharField(blank=True, max_length=64, null=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_cdr_stats',
                'managed': False,
                'verbose_name': 'Cdr Stat',
            },
        ),
        migrations.CreateModel(
            name='TpDerivedChargers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tpid', models.CharField(max_length=64)),
                ('loadid', models.CharField(max_length=64)),
                ('direction', models.CharField(choices=[('*in', '*in'), ('*out', '*out')], max_length=8)),
                ('tenant', models.CharField(max_length=64)),
                ('category', models.CharField(max_length=32)),
                ('account', models.CharField(max_length=64)),
                ('subject', models.CharField(max_length=64)),
                ('destination_ids', models.CharField(blank=True, max_length=64, null=True)),
                ('runid', models.CharField(max_length=24)),
                ('run_filters', models.CharField(blank=True, max_length=256, null=True)),
                ('req_type_field', models.CharField(choices=[('^*prepaid', '*prepaid'), ('^*postpaid', '*postpaid'), ('^*pseudoprepaid', '*pseudoprepaid'), ('^*rated', '*rated')], default='^*rated', max_length=64)),
                ('direction_field', models.CharField(default='*default', max_length=64)),
                ('tenant_field', models.CharField(default='*default', max_length=64)),
                ('category_field', models.CharField(default='*default', max_length=64)),
                ('account_field', models.CharField(default='*default', max_length=64)),
                ('subject_field', models.CharField(default='*default', max_length=64)),
                ('destination_field', models.CharField(default='*default', max_length=64)),
                ('setup_time_field', models.CharField(default='*default', max_length=64)),
                ('pdd_field', models.CharField(default='*default', max_length=64)),
                ('answer_time_field', models.CharField(default='*default', max_length=64)),
                ('usage_field', models.CharField(default='*default', max_length=64)),
                ('supplier_field', models.CharField(default='*default', max_length=64)),
                ('disconnect_cause_field', models.CharField(default='*default', max_length=64)),
                ('rated_field', models.CharField(default='*default', max_length=64)),
                ('cost_field', models.CharField(default='*default', max_length=64)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_derived_chargers',
                'managed': False,
                'verbose_name': 'Derived Charger',
            },
        ),
        migrations.CreateModel(
            name='TpDestinationRates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tpid', models.CharField(max_length=64)),
                ('tag', models.CharField(max_length=64)),
                ('destinations_tag', models.CharField(max_length=64)),
                ('rates_tag', models.CharField(max_length=64)),
                ('rounding_method', models.CharField(max_length=255)),
                ('rounding_decimals', models.IntegerField()),
                ('max_cost', models.DecimalField(decimal_places=4, max_digits=7)),
                ('max_cost_strategy', models.CharField(max_length=16)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_destination_rates',
                'managed': False,
                'verbose_name': 'Destinations Rate',
            },
        ),
        migrations.CreateModel(
            name='TpDestinations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tpid', models.CharField(default='CgratesPay', max_length=64)),
                ('tag', models.CharField(max_length=64)),
                ('prefix', models.CharField(max_length=24, validators=[django.core.validators.RegexValidator(message='The prefix will be valid', regex='^(1[2-9]|[2-9])([0-9]{2})([2-9][0-9]{2})')])),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_destinations',
                'managed': False,
                'verbose_name': 'Prefix',
            },
        ),
        migrations.CreateModel(
            name='TpLcrRules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tpid', models.CharField(max_length=64)),
                ('direction', models.CharField(choices=[('*in', '*in'), ('*out', '*out')], max_length=8)),
                ('tenant', models.CharField(max_length=64)),
                ('category', models.CharField(max_length=32)),
                ('account', models.CharField(max_length=64)),
                ('subject', models.CharField(max_length=64)),
                ('destination_tag', models.CharField(max_length=64)),
                ('rp_category', models.CharField(max_length=32)),
                ('strategy', models.CharField(choices=[('*static', '*static'), ('*lowest_cost', '*lowest_cost'), ('*highest_cost', '*highest_cost'), ('*qos_with_threshold', '*qos_with_threshold'), ('*qos', '*qos'), ('*load_distribution', '*load_distribution')], max_length=18)),
                ('strategy_params', models.CharField(max_length=256)),
                ('activation_time', models.CharField(max_length=24)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_lcr_rules',
                'managed': False,
                'verbose_name': 'Lcr Rule',
            },
        ),
        migrations.CreateModel(
            name='TpRates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tpid', models.CharField(max_length=64)),
                ('tag', models.CharField(max_length=64)),
                ('connect_fee', models.DecimalField(decimal_places=4, max_digits=7)),
                ('rate', models.DecimalField(decimal_places=4, max_digits=7)),
                ('rate_unit', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(message='The billing unit expressed in seconds', regex='^[1-9][0-9]+$')])),
                ('rate_increment', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(message='This rate will apply in increments of duration', regex='^[1-9][0-9]+$')])),
                ('group_interval_start', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(message='When the rate starts', regex='^[0-9]+$')])),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_rates',
                'managed': False,
                'verbose_name': 'Rate',
            },
        ),
        migrations.CreateModel(
            name='TpRatingPlans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tpid', models.CharField(max_length=64)),
                ('tag', models.CharField(max_length=64)),
                ('destrates_tag', models.CharField(max_length=64)),
                ('timing_tag', models.CharField(max_length=64)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_rating_plans',
                'managed': False,
                'verbose_name': 'Rating Plan',
            },
        ),
        migrations.CreateModel(
            name='TpRatingProfiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tpid', models.CharField(default='CgratesPay', max_length=64)),
                ('loadid', models.CharField(default='CSVLOAD', max_length=64)),
                ('direction', models.CharField(choices=[('*in', '*in'), ('*out', '*out')], default='*out', max_length=8)),
                ('tenant', models.CharField(max_length=64)),
                ('category', models.CharField(max_length=32)),
                ('subject', models.CharField(max_length=64)),
                ('activation_time', models.CharField(max_length=24, validators=[pay.validators.activation_time_validate])),
                ('rating_plan_tag', models.CharField(max_length=64)),
                ('fallback_subjects', models.CharField(blank=True, max_length=64, null=True)),
                ('cdr_stat_queue_ids', models.CharField(blank=True, max_length=64, null=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_rating_profiles',
                'managed': False,
                'verbose_name': 'Rating Profile',
            },
        ),
        migrations.CreateModel(
            name='TpResources',
            fields=[
                ('p_k', models.AutoField(primary_key=True, serialize=False)),
                ('tpid', models.CharField(max_length=64)),
                ('tenant', models.CharField(max_length=64)),
                ('id', models.CharField(max_length=64)),
                ('filter_ids', models.CharField(max_length=16)),
                ('activation_interval', models.CharField(max_length=64)),
                ('usage_ttl', models.CharField(max_length=32)),
                ('limit', models.CharField(max_length=64)),
                ('allocation_message', models.CharField(max_length=64)),
                ('blocker', models.IntegerField(choices=[(1, 'true'), (0, 'false')])),
                ('stored', models.IntegerField(choices=[(1, 'true'), (0, 'false')])),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('threshold_ids', models.CharField(max_length=64)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_resources',
                'managed': False,
                'verbose_name': 'Resource',
            },
        ),
        migrations.CreateModel(
            name='TpSharedGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tpid', models.CharField(default='CgratesPay', max_length=64)),
                ('tag', models.CharField(max_length=64)),
                ('account', models.CharField(default='*any', max_length=64)),
                ('strategy', models.CharField(max_length=24)),
                ('rating_subject', models.CharField(blank=True, max_length=24, null=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_shared_groups',
                'managed': False,
                'verbose_name': 'Shared Group',
            },
        ),
        migrations.CreateModel(
            name='TpStats',
            fields=[
                ('p_k', models.AutoField(primary_key=True, serialize=False)),
                ('tpid', models.CharField(default='CgratesPay', max_length=64)),
                ('tenant', models.CharField(max_length=64)),
                ('id', models.CharField(max_length=64)),
                ('filter_ids', models.CharField(max_length=64)),
                ('activation_interval', models.CharField(max_length=64)),
                ('queue_length', models.IntegerField()),
                ('ttl', models.CharField(max_length=32)),
                ('metrics', models.CharField(max_length=64)),
                ('parameters', models.CharField(max_length=64)),
                ('blocker', models.IntegerField()),
                ('stored', models.IntegerField()),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('min_items', models.IntegerField()),
                ('threshold_ids', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'tp_stats',
                'managed': False,
                'verbose_name': 'Stat',
            },
        ),
        migrations.CreateModel(
            name='TpSuppliers',
            fields=[
                ('p_k', models.AutoField(primary_key=True, serialize=False)),
                ('tpid', models.CharField(default='CgratesPay', max_length=64)),
                ('tenant', models.CharField(max_length=64)),
                ('id', models.CharField(max_length=64)),
                ('filter_ids', models.CharField(max_length=64)),
                ('activation_interval', models.CharField(max_length=64)),
                ('sorting', models.CharField(choices=[('*static', '*static'), ('*lowest_cost', '*lowest_cost'), ('*highest_cost', '*highest_cost'), ('*qos_with_threshold', '*qos_with_threshold'), ('*qos', '*qos'), ('*load_distribution', '*load_distribution')], max_length=32)),
                ('sorting_parameters', models.CharField(max_length=64)),
                ('supplier_id', models.CharField(max_length=32)),
                ('supplier_filter_ids', models.CharField(max_length=64)),
                ('supplier_account_ids', models.CharField(max_length=64)),
                ('supplier_ratingplan_ids', models.CharField(max_length=64)),
                ('supplier_resource_ids', models.CharField(max_length=64)),
                ('supplier_stat_ids', models.CharField(max_length=64)),
                ('supplier_weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('supplier_blocker', models.IntegerField(choices=[(1, 'true'), (0, 'false')])),
                ('supplier_parameters', models.CharField(max_length=64)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_suppliers',
                'managed': False,
                'verbose_name': 'Supplier',
            },
        ),
        migrations.CreateModel(
            name='TpThresholds',
            fields=[
                ('p_k', models.AutoField(primary_key=True, serialize=False)),
                ('tpid', models.CharField(max_length=64)),
                ('tenant', models.CharField(max_length=64)),
                ('id', models.CharField(max_length=64)),
                ('filter_ids', models.CharField(max_length=64)),
                ('activation_interval', models.CharField(max_length=64)),
                ('recurrent', models.IntegerField(choices=[(1, 'true'), (0, 'false')])),
                ('min_hits', models.IntegerField()),
                ('min_sleep', models.CharField(max_length=16)),
                ('blocker', models.IntegerField(choices=[(1, 'true'), (0, 'false')])),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('action_ids', models.CharField(max_length=64)),
                ('async', models.IntegerField(choices=[(1, 'true'), (0, 'false')])),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_thresholds',
                'managed': False,
                'verbose_name': 'Threshold',
            },
        ),
        migrations.CreateModel(
            name='TpTimings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tpid', models.CharField(default='CgratesPay', max_length=64)),
                ('tag', models.CharField(max_length=64)),
                ('years', models.CharField(max_length=255)),
                ('months', models.CharField(max_length=255)),
                ('month_days', models.CharField(max_length=255)),
                ('week_days', models.CharField(max_length=255)),
                ('time', models.CharField(max_length=32)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_timings',
                'managed': False,
                'verbose_name': 'Timing',
            },
        ),
        migrations.CreateModel(
            name='TpUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tpid', models.CharField(default='CgratesPay', max_length=64)),
                ('tenant', models.CharField(max_length=64)),
                ('user_name', models.CharField(max_length=64)),
                ('masked', models.IntegerField()),
                ('attribute_name', models.CharField(choices=[('SysUserName', 'SysUserName'), ('SysPassword', 'SysPassword'), ('Cli', 'Cli'), ('Account', 'Account'), ('Subject', 'Subject'), ('Uuid', 'Uuid'), ('SubscriberId', 'SubscriberId'), ('RequestType', 'RequestType'), ('SysUserName', 'SysUserName'), ('RifAttr', 'RifAttr')], max_length=64)),
                ('attribute_value', models.CharField(max_length=64)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'tp_users',
                'managed': False,
                'verbose_name': 'Cgrates User',
            },
        ),
        migrations.CreateModel(
            name='Versions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=64, unique=True)),
                ('version', models.IntegerField()),
            ],
            options={
                'db_table': 'versions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tenant', models.CharField(default='NetProviderSolutions', max_length=64)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Carrier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameid', models.CharField(max_length=40)),
                ('description', models.CharField(default='', max_length=40)),
                ('rate', models.CharField(max_length=3)),
            ],
            options={
                'db_table': 'Carrier',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RateDeck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploadday', models.DateTimeField()),
                ('efectiveday', models.DateTimeField()),
                ('filename', models.FileField(default='', upload_to='', validators=[pay.validators.csv_file_validator])),
                ('carrier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pay.Carrier')),
            ],
            options={
                'db_table': 'RateDeck',
                'managed': True,
                'verbose_name': 'Rate Deck',
            },
        ),
    ]
